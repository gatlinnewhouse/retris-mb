[package]
name = "retris-mb"
version = "0.1.0"
edition = "2021"

[dependencies]
cortex-m-rt = "0.7"
embedded-hal = "0.2.7"
libm = "0.2.7"
lsm303agr = "0.2.0"
microbit-v2 = "0.13.0"
nanorand = { version = "0.7.0", default-features = false, features = ["pcg64"] }
rtt-target = "0.4"

[dependencies.panic-rtt-target]
version = "0.1"
features = ["cortex-m"]

# This works around old versions in the `microbit-v2`
# crate. You don't have to use this crate, just linking
# against it is sufficient.
[dependencies.cortex-m]
version = "0.7"
features = ["inline-asm", "critical-section-single-core"]

# Features to enable on the micro:bit v2 control scheme
[features]
default = ["classic"]                             # Default feature set (aka what I am using to play the game/turn in at end of quarter)
debug = ["logo", "buttons", "accelerometer"]      # Demo mode to read inputs and rprintln to the serial console for debugging
classic = ["logo", "buttons"]                     # Classic mode, no screen, just buttons and logo
tilt = ["logo", "accelerometer"]                  # Tilt mode, no screen, just accelerometer and logo
tilt_screen = ["logo", "accelerometer", "screen"] # Tilt mode, with screen, accelerometer, and logo
classic_screen = ["logo", "buttons", "screen"]    # Classic mode, with screen, buttons, and logo
buttons = []                                      # Use the A and B buttons on the micro:bit v2 as inputs for moving tetrominos
logo = []                                         # Use the capacitive touch logo on the micro:bit v2 as an input for rotating tetrominos
accelerometer = []                                # Use the accelerometer on the micro:bit v2 as an input for moving tetrominos
screen = []                                       # Use an attached Adafruit 0.96‚Äù 160x80 Color TFT Display as a screen for the game
text = []                                         # Use for rendering text on the screen